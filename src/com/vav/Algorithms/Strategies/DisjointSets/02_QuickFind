Quick Find:

1.  In Quick Find we usually use a datatype of a simple array.
2.  Whenever we need to check the connectivity of two items, we just parse through
    the array and check if the items have the same value. If two items have the same
    value then they are connected.
3.  For union we put the same value for all the items we want to connect.
4.  Quick find takes o(n) time to insert, O(n) time to union two items and O(1) time
    to find an item(using index).
5.  The problem with quick find is that for n number of items the union will take O(n^2) time.
    this is very expensive. (We are considering n very huge here).

****The problem with quadratic algorithms is that they dont scale. With better computers and more
    computing power the quadratic algorithms keep getting slower.


    [0,1,2,3,4,5,6,7]
    union(3,6) //the value of 3 is 3, find in entire array the index with value of 3 and change it to 6
    [0,1,2,6,4,5,6,7]
    union(3,7) //the value of 3 is 6, find in entire array the index with value of 6 and change it to 7
    [0,1,2,7,4,5,7,7]
    union(4,5)
    ...

The easiest way to understand is if N people are standing in a queue and you want to team up with a
person then you will ask moderator to give a t-shirt similar to yours to the person at that index
so now both are wearing same t-shirt and are connected. This can keep going on.