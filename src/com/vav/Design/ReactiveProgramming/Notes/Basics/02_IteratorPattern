Iterator Pattern:

1.  Iterator pattern is used to iterate over an aggregate object(An object which contains other objects of same type)
2.  Iterator pattern usually uses 3 types of objects:
    A.  Data Structure
    B.  Collection
    C.  Iterator

    A.  Data Structure
        1.  This can be any data structure with any data members.
    B.  Collection
        1.  Collection classes are specific for a data structure
        2.  This also contain an array of relevant data structure.
        3.  This contains all the methods to add, remove or operate on this data structure array.
        4.  Collections also extend the Collection interface and override getIterator() method.
        5.  getIterator() method returns a new instance of iterator.
    C.  Iterator
        1.  Each collection has its own corresponding Iterator class.
        2.  Each iterator takes the Collection object as a constructor argument or through setter functions.
        3.  Each iterator implements the Iterator interface and implements its hasNext() and next() methods.

