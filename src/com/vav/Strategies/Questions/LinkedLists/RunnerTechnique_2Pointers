Runner technique or two pointers technique:
1.  This is the technique when we use two pointers to scan through a linked list.
2.  One pointer is moving faster than another.
3.  One pointer would be moving at rate of 1 link at a time while other pointer will be moving like two links or more at a time.

Use:
Q1. To find out if linked list has a loop.
Q2. To detect the location of the loop.

Q3. To rearrange a linked list like a1->a2->a3->b1->b2->b3 in a way where a1->b1->a2->b2->a3->b3 where A's and B's are even.
    Simply use two pointers, one moving one node at a time(X), other 2 nodes at a time(Y). By the time two node pointer reach the
    end of the list. One node pointer(X) will be at the middle of the list. @b1 in example
    Then again move two node pointer(Y) to head @a1
    Now you need to do a while loop on pointer Y and loop
    while(Y!=null){
    //do the logic a1->b1->a2->b2->a3->b3
    Method 1
    //copying in a new list of same size is an option but with 2x space complexity.
    Method 2
    temp1 = y.next;
    y.next = x;
    y = temp1;
    temp2 = x.next;
    x.next = y;
    x=temp2
    }

