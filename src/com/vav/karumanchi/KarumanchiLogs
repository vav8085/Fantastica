	1.  Introduction
	2.  Recursion
	3.  Linked List
	4.  Stacks
	5.  queues
	6.  Trees                           - In Progress
	7.  Priority Queues and heaps
	8.  Disjoint sets ADT
	9.  Graph Algo
	10. Sorting
	11. Searching
	12. Selection Algo
	13. Symbol Tables
	14. Hashtables
	15. String Algorithms
	16. Algorithm design techniques
	17. Greedy
	18. Divide and Conquer
	19. Dynamic programming



	12/28
	1. separate chaining
	2. remove duplicates in array n2
	3. sorting to remove dups
	4. single pass hash table for above problem
	5. 2 arrays of unordered numbers , find if both have same set of numbers (if they have dups) n2 by moving compared elements to end of list
	6. improve complexity of 5 using sorting nlogn and then scanning array with 2 pointers to find same elements
	7. using hashtables, save all elements in a hashtable, increase counter value by 1 for dups. check every element in second array and decrease counter , then go over the entire hashtable to see if all 0s

